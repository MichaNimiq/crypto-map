/* tslint:disable */
/* eslint-disable */
/**
 * Crypto Map API documentation
 * The Establishments map API is serves a list of establishments that accept crypto as a payment method.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CryptoEstablishmentBaseInnerGeoLocation
 */
export interface CryptoEstablishmentBaseInnerGeoLocation {
    /**
     * 
     * @type {number}
     * @memberof CryptoEstablishmentBaseInnerGeoLocation
     */
    lat: number;
    /**
     * 
     * @type {number}
     * @memberof CryptoEstablishmentBaseInnerGeoLocation
     */
    lng: number;
}

/**
 * Check if a given object implements the CryptoEstablishmentBaseInnerGeoLocation interface.
 */
export function instanceOfCryptoEstablishmentBaseInnerGeoLocation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lat" in value;
    isInstance = isInstance && "lng" in value;

    return isInstance;
}

export function CryptoEstablishmentBaseInnerGeoLocationFromJSON(json: any): CryptoEstablishmentBaseInnerGeoLocation {
    return CryptoEstablishmentBaseInnerGeoLocationFromJSONTyped(json, false);
}

export function CryptoEstablishmentBaseInnerGeoLocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CryptoEstablishmentBaseInnerGeoLocation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lat': json['lat'],
        'lng': json['lng'],
    };
}

export function CryptoEstablishmentBaseInnerGeoLocationToJSON(value?: CryptoEstablishmentBaseInnerGeoLocation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lat': value.lat,
        'lng': value.lng,
    };
}

