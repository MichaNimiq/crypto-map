/* tslint:disable */
/* eslint-disable */
/**
 * Crypto Map API documentation
 * The Establishments map API is serves a list of establishments that accept crypto as a payment method.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EstablishmentIssueBody
 */
export interface EstablishmentIssueBody {
    /**
     * 
     * @type {number}
     * @memberof EstablishmentIssueBody
     */
    issue_category_id: number;
    /**
     * 
     * @type {string}
     * @memberof EstablishmentIssueBody
     */
    establishment_uuid: string;
    /**
     * 
     * @type {string}
     * @memberof EstablishmentIssueBody
     */
    token: string;
    /**
     * 
     * @type {string}
     * @memberof EstablishmentIssueBody
     */
    description: string;
}

/**
 * Check if a given object implements the EstablishmentIssueBody interface.
 */
export function instanceOfEstablishmentIssueBody(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "issue_category_id" in value;
    isInstance = isInstance && "establishment_uuid" in value;
    isInstance = isInstance && "token" in value;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function EstablishmentIssueBodyFromJSON(json: any): EstablishmentIssueBody {
    return EstablishmentIssueBodyFromJSONTyped(json, false);
}

export function EstablishmentIssueBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): EstablishmentIssueBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'issue_category_id': json['issue_category_id'],
        'establishment_uuid': json['establishment_uuid'],
        'token': json['token'],
        'description': json['description'],
    };
}

export function EstablishmentIssueBodyToJSON(value?: EstablishmentIssueBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'issue_category_id': value.issue_category_id,
        'establishment_uuid': value.establishment_uuid,
        'token': value.token,
        'description': value.description,
    };
}

