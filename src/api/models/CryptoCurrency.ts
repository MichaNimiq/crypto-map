/* tslint:disable */
/* eslint-disable */
/**
 * Crypto Map API documentation
 * The Establishments map API is serves a list of establishments that accept crypto as a payment method.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CryptoCurrency
 */
export interface CryptoCurrency {
    /**
     * 
     * @type {string}
     * @memberof CryptoCurrency
     */
    BTC?: string;
    /**
     * 
     * @type {string}
     * @memberof CryptoCurrency
     */
    DASH?: string;
    /**
     * 
     * @type {string}
     * @memberof CryptoCurrency
     */
    LTC?: string;
    /**
     * 
     * @type {string}
     * @memberof CryptoCurrency
     */
    ETH?: string;
    /**
     * 
     * @type {string}
     * @memberof CryptoCurrency
     */
    XRP?: string;
    /**
     * 
     * @type {string}
     * @memberof CryptoCurrency
     */
    XLM?: string;
    /**
     * 
     * @type {string}
     * @memberof CryptoCurrency
     */
    NIM?: string;
}

/**
 * Check if a given object implements the CryptoCurrency interface.
 */
export function instanceOfCryptoCurrency(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CryptoCurrencyFromJSON(json: any): CryptoCurrency {
    return CryptoCurrencyFromJSONTyped(json, false);
}

export function CryptoCurrencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): CryptoCurrency {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'BTC': !exists(json, 'BTC') ? undefined : json['BTC'],
        'DASH': !exists(json, 'DASH') ? undefined : json['DASH'],
        'LTC': !exists(json, 'LTC') ? undefined : json['LTC'],
        'ETH': !exists(json, 'ETH') ? undefined : json['ETH'],
        'XRP': !exists(json, 'XRP') ? undefined : json['XRP'],
        'XLM': !exists(json, 'XLM') ? undefined : json['XLM'],
        'NIM': !exists(json, 'NIM') ? undefined : json['NIM'],
    };
}

export function CryptoCurrencyToJSON(value?: CryptoCurrency | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BTC': value.BTC,
        'DASH': value.DASH,
        'LTC': value.LTC,
        'ETH': value.ETH,
        'XRP': value.XRP,
        'XLM': value.XLM,
        'NIM': value.NIM,
    };
}

