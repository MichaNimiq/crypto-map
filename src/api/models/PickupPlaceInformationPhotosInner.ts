/* tslint:disable */
/* eslint-disable */
/**
 * Crypto Map API documentation
 * The Shop Directory API is serves a list of shops that accept crypto as a payment method.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PickupPlaceInformationPhotosInner
 */
export interface PickupPlaceInformationPhotosInner {
    /**
     * 
     * @type {number}
     * @memberof PickupPlaceInformationPhotosInner
     */
    height?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof PickupPlaceInformationPhotosInner
     */
    html_attributions?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PickupPlaceInformationPhotosInner
     */
    photo_reference?: string;
    /**
     * 
     * @type {number}
     * @memberof PickupPlaceInformationPhotosInner
     */
    width?: number;
}

/**
 * Check if a given object implements the PickupPlaceInformationPhotosInner interface.
 */
export function instanceOfPickupPlaceInformationPhotosInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PickupPlaceInformationPhotosInnerFromJSON(json: any): PickupPlaceInformationPhotosInner {
    return PickupPlaceInformationPhotosInnerFromJSONTyped(json, false);
}

export function PickupPlaceInformationPhotosInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PickupPlaceInformationPhotosInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'height': !exists(json, 'height') ? undefined : json['height'],
        'html_attributions': !exists(json, 'html_attributions') ? undefined : json['html_attributions'],
        'photo_reference': !exists(json, 'photo_reference') ? undefined : json['photo_reference'],
        'width': !exists(json, 'width') ? undefined : json['width'],
    };
}

export function PickupPlaceInformationPhotosInnerToJSON(value?: PickupPlaceInformationPhotosInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'height': value.height,
        'html_attributions': value.html_attributions,
        'photo_reference': value.photo_reference,
        'width': value.width,
    };
}

