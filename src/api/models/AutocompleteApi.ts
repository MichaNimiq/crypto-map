/* tslint:disable */
/* eslint-disable */
/**
 * Crypto Map API documentation
 * The Establishments map API is serves a list of establishments that accept crypto as a payment method.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AutocompleteApiCategoriesInner } from './AutocompleteApiCategoriesInner';
import {
    AutocompleteApiCategoriesInnerFromJSON,
    AutocompleteApiCategoriesInnerFromJSONTyped,
    AutocompleteApiCategoriesInnerToJSON,
} from './AutocompleteApiCategoriesInner';
import type { AutocompleteApiCurrenciesInner } from './AutocompleteApiCurrenciesInner';
import {
    AutocompleteApiCurrenciesInnerFromJSON,
    AutocompleteApiCurrenciesInnerFromJSONTyped,
    AutocompleteApiCurrenciesInnerToJSON,
} from './AutocompleteApiCurrenciesInner';
import type { AutocompleteApiEstablishmentsInner } from './AutocompleteApiEstablishmentsInner';
import {
    AutocompleteApiEstablishmentsInnerFromJSON,
    AutocompleteApiEstablishmentsInnerFromJSONTyped,
    AutocompleteApiEstablishmentsInnerToJSON,
} from './AutocompleteApiEstablishmentsInner';

/**
 * 
 * @export
 * @interface AutocompleteApi
 */
export interface AutocompleteApi {
    /**
     * 
     * @type {Array<AutocompleteApiEstablishmentsInner>}
     * @memberof AutocompleteApi
     */
    establishments: Array<AutocompleteApiEstablishmentsInner>;
    /**
     * 
     * @type {Array<AutocompleteApiCategoriesInner>}
     * @memberof AutocompleteApi
     */
    categories: Array<AutocompleteApiCategoriesInner>;
    /**
     * 
     * @type {Array<AutocompleteApiCurrenciesInner>}
     * @memberof AutocompleteApi
     */
    currencies: Array<AutocompleteApiCurrenciesInner>;
}

/**
 * Check if a given object implements the AutocompleteApi interface.
 */
export function instanceOfAutocompleteApi(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "establishments" in value;
    isInstance = isInstance && "categories" in value;
    isInstance = isInstance && "currencies" in value;

    return isInstance;
}

export function AutocompleteApiFromJSON(json: any): AutocompleteApi {
    return AutocompleteApiFromJSONTyped(json, false);
}

export function AutocompleteApiFromJSONTyped(json: any, ignoreDiscriminator: boolean): AutocompleteApi {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'establishments': ((json['establishments'] as Array<any>).map(AutocompleteApiEstablishmentsInnerFromJSON)),
        'categories': ((json['categories'] as Array<any>).map(AutocompleteApiCategoriesInnerFromJSON)),
        'currencies': ((json['currencies'] as Array<any>).map(AutocompleteApiCurrenciesInnerFromJSON)),
    };
}

export function AutocompleteApiToJSON(value?: AutocompleteApi | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'establishments': ((value.establishments as Array<any>).map(AutocompleteApiEstablishmentsInnerToJSON)),
        'categories': ((value.categories as Array<any>).map(AutocompleteApiCategoriesInnerToJSON)),
        'currencies': ((value.currencies as Array<any>).map(AutocompleteApiCurrenciesInnerToJSON)),
    };
}

