body {
  font-family: $fontFamily;
  font-weight: 400;
  min-height: 100vh;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: var(--font-size-body);
  line-height: var(--line-height);
}

#app {
  height: 100vh;
  width: 100vw;
  padding: $paddingContent;
  background-color: var(--color-white);
}

#map-list-wrap{
  overflow-y: auto;
  overflow-x: hidden;

  @include media('small') {
    display: flex;
    flex-direction: column;
    height: 100%;
    overflow: hidden;
  }

  @include media('big') {
    flex-direction: row-reverse;
  }
}

#content-wrap {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  border: 1px solid var(--color-blue-dark-12);
  border-radius: $borderRadiusBig;
  overflow: hidden;
  box-shadow: var(--shadow-app);
}

h1,
.h1 {
  line-height: var(--line-height-h1);
  font-size: var(--font-size-h1);
}

h2,
.h2 {
  line-height: var(--line-height-h2);
  font-size: var(--font-size-h2);
}

.subline {
  font-size: var(--font-size-subline);
  color: var(--color-blue-dark-60);
}

a {
  &.arrow {
    padding-right: $paddingMed;

    svg {
      position: absolute;
      bottom: 1px;
      right: 0;
      width: 8px;
      height: 12px;
      transition-property: bottom, right;
      transition-duration: $transition, $transition;
      transition-timing-function: ease, ease;

      path {
        transition: stroke $transition ease;
      }
    }

    @include focusKeyAndHover() {
      svg {
        bottom: 5px;
        right: -5px;
      }
    }
  }

  &.blue {
    font-weight: 800;
    color: var(--color-link-blue);
    text-decoration: none;
    line-height: 1.3;

    &.arrow {
      svg {
        path {
          stroke: var(--color-link-blue);
        }
      }
    }
  }
}

label {
  font-size: var(--font-size-label);
  text-transform: uppercase;
  letter-spacing: 1.5px;
  display: block;
  opacity: 0.4;
  margin-bottom: $paddingContent;
}

select {
  border: 2px solid var(--color-blue-dark-12);
  background-color: var(--color-white);
  height: var(--button-map-controls-width);
  padding: var(--padding-input);
  width: 100%;
  font-size: var(--font-size-buttonForm);

  option {
    font-size: var(--font-size-buttonForm);
  }
}

button.select {
  position: relative;
  width: 100%;

  .button-placeholder{
    font-size: var(--font-size-body);
    padding: $paddingSmall calc($paddingContent + $paddingSmall) $paddingSmall $paddingMed;
    border: var(--border-select);
    transition: border-color $transition ease;
    position: relative;
    cursor: pointer;
    text-align: left;

    > svg {
      opacity: 0.30;
      transition: opacity $transition ease;
      position: absolute;
      right: $paddingMed;
      top: 50%;
      transform: translateY(-50%);
    }

    @include focusKey () {
      border-color: var(--border-select);
    }

    @include focusPointer () {
      border-color: var(--border-select);

      > svg {
        opacity: 1;
      }
    }
  }

  &.open {
    .select-options {
      opacity: 1;
      visibility: visible;
      max-height: 9999px;
      transition-delay: 0s, 0.001s, 0.001s;
    }
  }
}


.select-options,
.pac-container{
  background: radial-gradient(100% 100% at 100% 100%, var(--color-blue-dark-gradient-out) 0%, var(--color-blue-dark-gradient-in) 100%);
  color: var(--color-white);
  border-radius: var(--border-radius-input);
  padding: $paddingSmall;
  opacity: 0;
  visibility: hidden;
  transition-property: max-height, opacity, visibility;
  transition-duration: 0s, $transition, $transition;
  transition-timing-function: linear, ease, ease;
  transition-delay: $transition, 0s, 0s;
  position: absolute;
  width: calc(100% - $paddingSmall);
  z-index: 1;

  &.select-options{
    max-height: 0px;
    overflow: hidden;
  }

  .select-option,
  .pac-item {
    padding: $paddingSmall;
    display: flex;
    align-items: center;
    gap: $paddingSmall;
    justify-content: space-between;
    cursor: pointer;
    transition: background-color $transition ease;


    .select-icon-name-flex-wrap{
      display: flex;
      align-items: center;
      gap: $paddingSmall;
    }

    .select-name {
      display: flex;
      align-items: center;
      font-size: var(--font-size-pinTitle);

      .select-ident{
        font-weight: 700;
        text-transform: uppercase;

        &:after {
          content: ',';
          margin-right: 0.18em;
        }
      }
    }

    .select-radio {
      width: 20px;
      height: 20px;
      border-radius: 50%;
      border: 1px solid var(--color-select-option-hover);
      position: relative;
      transition: border-color $transition ease;

      .radio-fill{
        position: absolute;
        top: 2px;
        left: 2px;
        width: 14px;
        height: 14px;
        border-radius: 50%;
        background-color: var(--color-select-option-radio-fill);
        opacity: 0;
        transition: opacity $transition ease;
      }
    }

    @include focusKeyAndHover() {
      &,
      &.selected{
        background-color: var(--color-select-option-hover);

        .select-radio{
          border-color: var(--color-white);
        }
      }
    }

    &.selected{
      background-color: transparent;
      color: var(--color-white);

      .select-radio{
        .radio-fill{
          opacity: 1;
        }
      }
    }
  }
}

input,
textarea,
select {
  &[type="text"],
  &[type="number"],
  &[type="email"] {
    height: var(--input-height);
    padding: var(--padding-input);
    border: var(--border-input);
    border-radius: 20px;

    transition-property: border-color, color;
    transition-duration: $transition, $transition;
    transition-timing-function: ease, ease;

    &::placeholder {
      color: var(--color-blue-dark-60);
    }

    @include focusKeyAndHover() {
      border-color: var(--color-blue30);
      color: var(--color-blue);

      &::placeholder {
        color: var(--color-blue30);
      }
    }

    &.error {
      border-color: var(--color-orange60);
      color: var(--color-orange);

      &::placeholder {
        color: var(--color-orange60);
      }

    @include focusKeyAndHover() {
        border-color: var(--color-orange);

        &::placeholder {
          color: var(--color-orange);
        }
      }
    }
  }

  &[type="text"].search {
    /* 
      todo
    */
  }
}

input.search {
  padding-right: $paddingHuge;
  width: 100%;
  border-color: var(--color-blue-dark-15);

  @include focusKeyAndHover() {
    border-color: var(--color-blue30);

    & + svg {
      path {
        stroke: var(--color-blue30);
      }
    }
  }
}

.input-search-wrap {
  position: relative;
  flex-grow: 1;

  svg.magnifier {
    position: absolute;
    right: $paddingMed;
    top: 7px;
    
    path {
      stroke: var(--color-blue-dark-15);
    }
  }
}

textarea {
  height: unset;
  min-height: 70px;
}

.button {
  cursor: pointer;
  font-size: var(--font-size-buttonForm);
  display: flex;
  gap: 10px;
  align-items: center;
  height: var(--button-height);
  padding: var(--button-padding);
  border-radius: var(--button-height);
  position: relative;

  .button-label {
    font-size: var(--font-size-buttonForm);
    font-weight: 700;
    display: none;

    @include media('small'){
      display: inline-block;
    }
  }

  &:focus {
    outline: none;
  }

  @include focusKey() {
    &:before {
      content: '';
      position: absolute;
      left: -$borderRadiusSmall;
      top: -$borderRadiusSmall;
      bottom: -$borderRadiusSmall;
      right: -$borderRadiusSmall;
      border: 1px solid var(--color-blue30);
      border-radius: var(--button-height);
    }
  }

  @include focusPointer() {
    &:before {
      display: none;
    }
  }

  &.primary {
    background: radial-gradient(100% 100% at 100% 100%, var(--color-blue-gradient-out) 0%, var(--color-blue-gradient-in) 100%);
    color: var(--color-white);
    font-weight: 700;
    box-shadow: $shadowMapButton;
    transition-property: background, box-shadow;
    transition-duration: $transition, $transition;
    transition-timing-function: ease, ease;

    @include focusKeyAndHover() {
      background: radial-gradient(100% 100% at 100% 100%, #2355C4 0%, #0071C3 100%);
      box-shadow: $shadowMapButtonHover;
    }
  }

  &.secondary {
    background-color: var(--color-blue-dark-07);

    &:hover{
      background-color: var(--color-blue-dark-12);
    }

    :disabled {
      .button-label {
        opacity: 0.6;
      }
    }
  }

  &.resize {
    padding-left: 9px;
    padding-right: 9px;

    .shrink {
      display: none;
    }

    &.fullscreen {
      .shrink {
        display: inline-block;
      }
      .expand {
        display: none;
      }
    }
  }
}

.tag-list { 
  display: flex;
  flex-wrap: wrap;
  margin-top: $paddingSmall;
  gap: $paddingSmall;
}

.tag-item {
  background-color: var(--color-blue-dark-07);
  border-radius: var(--border-radius-input);
  padding: var(--padding-tag-item);
  border-radius: var(--border-radius-input);
  font-size: var(--font-size-input);
  cursor: pointer;
  display: none;
  padding-right: $paddingContent;
  position: relative;

  svg {
    width: $fontSmall;
    height: $fontSmall;
    position: absolute;
    right: $paddingSmall;
    top: 50%;
    transform: translateY(-50%);
  }

  &.selected {
    display: block;
  }
}

.overlay {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 9;
  background-color: var(--color-blue-dark-overlay);
  opacity: 0;
  padding: $paddingContent;
  visibility: hidden;
  transition-property: opacity, visibility;
  transition-duration: $transition, $transition;
  transition-timing-function: ease, ease;

  &.overlay-fullscreen {
    background-color: var(--color-white);
  }

  &.visible {
    opacity: 1;
    visibility: visible;
  }

  .overlay-wrap {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    overflow: auto;
  }
}